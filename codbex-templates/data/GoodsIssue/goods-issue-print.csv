"DOCUMENTTEMPLATE_ID","DOCUMENTTEMPLATE_TYPE","DOCUMENTTEMPLATE_CONTENT"
"4","15","<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" ng-app="templateApp" ng-controller="templateController">

    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="icon" sizes="any" href="data:;base64,iVBORw0KGgo=">
        <title dg-view-title></title>
        <script type="text/javascript" src="/services/js/resources-core/services/loader.js?id=ide-view-js"></script>
        <link type="text/css" rel="stylesheet" href="/services/js/resources-core/services/loader.js?id=ide-view-css" />
        <theme></theme>
        <style>
            .right-row {
                text-align: right;
            }

            .date-box {
                max-width: 800px;
                margin: auto;
                padding: 30px;
                border: 1px solid #eee;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
                font-size: 16px;
                line-height: 24px;
                font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
                color: #555;
            }

            .date-box table {
                width: 100%;
                line-height: inherit;
                text-align: left;
            }

            .date-box table td {
                padding: 5px;
                vertical-align: top;
            }

            .date-box table tr td:nth-child(2) {
                text-align: right;
            }

            .date-box table tr td:nth-child(3) {
                text-align: right;
            }

            .date-box table tr td:nth-child(4) {
                text-align: right;
            }

            .date-box table tr.top table td {
                padding-bottom: 20px;
            }

            .date-box table tr.top table td.title {
                font-size: 45px;
                line-height: 45px;
                color: #333;
            }

            .date-box table tr.information table td {
                padding-bottom: 40px;
            }

            .date-box table tr.heading td {
                background: #eee;
                border-bottom: 1px solid #ddd;
                font-weight: bold;
            }

            .date-box table tr.details td {
                padding-bottom: 20px;
            }

            .date-box table tr.item td {
                border-bottom: 1px solid #eee;
            }

            .date-box table tr.item.last td {
                border-bottom: none;
            }

            .date-box table tr.total td:nth-child(4) {
                border-top: 2px solid #eee;
                font-weight: bold;
            }

            .issue-jumbo {
                text-align: center;
                font-size: 3em;
                font-weight: bold;
                color: gray;
            }

            .issue-footer {
                text-align: center;
                font-weight: bold;
            }

            @media only screen and (max-width: 600px) {
                date-box table tr.top table td {
                    width: 100%;
                    display: block;
                    text-align: center;
                }

                .date-box table tr.information table td {
                    width: 100%;
                    display: block;
                    text-align: center;
                }
            }

            /** RTL **/
            .date-box.rtl {
                direction: rtl;
                font-family: Tahoma, 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
            }

            .date-box.rtl table {
                text-align: right;
            }

            .date-box.rtl table tr td:nth-child(2) {
                text-align: left;
            }

            date-box.rtl table tr td:nth-child(3) {
                text-align: left;
            }

            .date-box.rtl table tr td:nth-child(6) {
                text-align: left;
            }

        </style>
        <script>
            const app = angular.module('templateApp', ['ideUI', 'ideView']);
app.controller('templateController', ['$scope', '$http', 'ViewParameters', function ($scope, $http, ViewParameters) {
    const params = ViewParameters.get();

    const printGoodsIssueUrl = "/services/ts/codbex-inventory/print/GoodsIssue/api/GoodsIssueService.ts/" + params.id;

    $http.get(printGoodsIssueUrl)
        .then(function (response) {
            $scope.GoodsIssue = response.data.goodsIssue;
            $scope.GoodsIssueItems = response.data.goodsIssueItems;
            $scope.Store = response.data.store;
            $scope.Company = response.data.company;
        });
}]);

        </script>
    </head>

    <body>
        <div class="date-box">
            <table cellpadding="0" cellspacing="0">
                <tr class="top">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>
                                    <div class="right-row">
                                        Goods Issue Date: <b>{{GoodsIssue.Date | date: 'yyyy-MM-dd'}}</b><br />
                                        Goods Issue Number: <b>{{GoodsIssue.Number}}</b>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <div class="issue-jumbo">Goods Issue</div>

            <table cellpadding="0" cellspacing="0">
                <tr class="information">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>
                                    <b>{{Company.Name}}</b><br />
                                    {{Company.Address}}<br />
                                    {{Company.PostCode}}, {{Company.City}}, {{Company.Country}}
                                </td>

                                <td>
                                    <b>{{Store.Name}}</b><br />
                                    {{Store.Phone}}<br />
                                    {{Store.Email}}<br />
                                    {{Store.Address}}<br />
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <table cellpadding="0" cellspacing="0">
                <tr class="heading">
                    <td>Item</td>
                    <td>Quantity</td>
                    <td>Price</td>
                    <td>Net</td>
                    <td>VAT</td>
                    <td>Gross</td>
                </tr>

                <tr class="item" ng-repeat="next in GoodsIssueItems">
                    <td>{{next.Product}}</td>
                    <td>{{next.Quantity| number}}</td>
                    <td>{{next.Price| number}}</td>
                    <td>{{next.Net| number}}</td>
                    <td>{{next.VAT| number}}</td>
                    <td>{{next.Gross| number}}</td>
                </tr>
            </table>

            <hr />
            <br />

            <table cellpadding="0" cellspacing="0">
                <tr class="information">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>
                                    TIN #: <b>{{Company.TIN}}</b><br />
                                    e-mail: {{Company.Email}}<br />
                                    Phone: {{Company.Phone}}
                                </td>

                                <td>
                                    IBAN: <b>{{Company.IBAN}}</b><br />
                                    SWIFT: {{Company.SWIFT}}<br />
                                    Bank: {{Company.Bank}}
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <div class="issue-footer">THANK YOU FOR YOUR BUSINESS!</div>

        </div>
    </body>

</html>

"
"DOCUMENTTEMPLATE_ID","DOCUMENTTEMPLATE_TYPE","DOCUMENTTEMPLATE_CONTENT"
"2","31","PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIgbmctYXBwPSJ0ZW1wbGF0ZUFwcCIgbmctY29udHJvbGxlcj0idGVtcGxhdGVDb250cm9sbGVyIj4KCiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCIgLz4KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgICAgIDxsaW5rIHJlbD0iaWNvbiIgc2l6ZXM9ImFueSIgaHJlZj0iZGF0YTo7YmFzZTY0LGlWQk9SdzBLR2dvPSI+CiAgICAgICAgPHRpdGxlIGRnLXZpZXctdGl0bGU+PC90aXRsZT4KICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvc2VydmljZXMvanMvcmVzb3VyY2VzLWNvcmUvc2VydmljZXMvbG9hZGVyLmpzP2lkPWlkZS12aWV3LWpzIj48L3NjcmlwdD4KICAgICAgICA8bGluayB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvc2VydmljZXMvanMvcmVzb3VyY2VzLWNvcmUvc2VydmljZXMvbG9hZGVyLmpzP2lkPWlkZS12aWV3LWNzcyIgLz4KICAgICAgICA8dGhlbWU+PC90aGVtZT4KICAgICAgICA8L3NjcmlwdD4KICAgICAgICA8c3R5bGU+CiAgICAgICAgICAgIC5kYXRlLWJveCB7CiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDgwMHB4OwogICAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvOwogICAgICAgICAgICAgICAgcGFkZGluZzogMzBweDsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZWU7CiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMTUpOwogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7CiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgJ0hlbHZldGljYScsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgICAgICBjb2xvcjogIzU1NTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgICAgICB9CgogICAgICAgICAgICAuZGF0ZS1ib3ggdGFibGUgdGQgewogICAgICAgICAgICAgICAgcGFkZGluZzogNXB4OwogICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyIHRkOm50aC1jaGlsZCgyKSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyIHRkOm50aC1jaGlsZCgzKSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyIHRkOm50aC1jaGlsZCg0KSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyLnRvcCB0YWJsZSB0ZCB7CiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyLnRvcCB0YWJsZSB0ZC50aXRsZSB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDQ1cHg7CiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogNDVweDsKICAgICAgICAgICAgICAgIGNvbG9yOiAjMzMzOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuZGF0ZS1ib3ggdGFibGUgdHIuaW5mb3JtYXRpb24gdGFibGUgdGQgewogICAgICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5kYXRlLWJveCB0YWJsZSB0ci5oZWFkaW5nIHRkIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNlZWU7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsKICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgICAgICB9CgogICAgICAgICAgICAuZGF0ZS1ib3ggdGFibGUgdHIuZGV0YWlscyB0ZCB7CiAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyLml0ZW0gdGQgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5kYXRlLWJveCB0YWJsZSB0ci5pdGVtLmxhc3QgdGQgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyLnRvdGFsIHRkOm50aC1jaGlsZCg0KSB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgI2VlZTsKICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0YWJsZSB7CiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5wYXlzbGlwLWp1bWJvIHsKICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogM2VtOwogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtOwogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgICAgICBjb2xvcjogZ3JheTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmlzc3VlLWZvb3RlciB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgICAgICAgICAgICAgZGF0ZS1ib3ggdGFibGUgdHIudG9wIHRhYmxlIHRkIHsKICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLmRhdGUtYm94IHRhYmxlIHRyLmluZm9ybWF0aW9uIHRhYmxlIHRkIHsKICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8qKiBSVEwgKiovCiAgICAgICAgICAgIC5kYXRlLWJveC5ydGwgewogICAgICAgICAgICAgICAgZGlyZWN0aW9uOiBydGw7CiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogVGFob21hLCAnSGVsdmV0aWNhIE5ldWUnLCAnSGVsdmV0aWNhJywgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94LnJ0bCB0YWJsZSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLmRhdGUtYm94LnJ0bCB0YWJsZSB0ciB0ZDpudGgtY2hpbGQoMikgewogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgZGF0ZS1ib3gucnRsIHRhYmxlIHRyIHRkOm50aC1jaGlsZCgzKSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgICAgICB9CgogICAgICAgICAgICAuZGF0ZS1ib3gucnRsIHRhYmxlIHRyIHRkOm50aC1jaGlsZCg2KSB7CiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgICAgICB9CgogICAgICAgIDwvc3R5bGU+CiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgY29uc3QgYXBwID0gYW5ndWxhci5tb2R1bGUoJ3RlbXBsYXRlQXBwJywgWydpZGVVSScsICdpZGVWaWV3J10pOwphcHAuY29udHJvbGxlcigndGVtcGxhdGVDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGh0dHAnLCAnVmlld1BhcmFtZXRlcnMnLCBmdW5jdGlvbiAoJHNjb3BlLCAkaHR0cCwgVmlld1BhcmFtZXRlcnMpIHsKICAgIGNvbnN0IHBhcmFtcyA9IFZpZXdQYXJhbWV0ZXJzLmdldCgpOwoKICAgIGNvbnN0IHByaW50UGF5c2xpcFVybCA9ICIvc2VydmljZXMvdHMvY29kYmV4LXBheXJvbGxzL3ByaW50L1BheXJvbGxFbnRyeS9hcGkvUGF5cm9sbEVudHJ5U2VydmljZS50cy8iICsgcGFyYW1zLmlkOwoKICAgICRodHRwLmdldChwcmludFBheXNsaXBVcmwpCiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAkc2NvcGUuUGF5cm9sbEVudHJ5ID0gcmVzcG9uc2UuZGF0YS5wYXlyb2xsRW50cnk7CiAgICAgICAgICAgICRzY29wZS5EYXRlID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgJHNjb3BlLkVtcGxveWVlID0gcmVzcG9uc2UuZGF0YS5lbXBsb3llZTsKICAgICAgICAgICAgJHNjb3BlLkRlcGFydG1lbnQgPSByZXNwb25zZS5kYXRhLmRlcGFydG1lbnQ7CiAgICAgICAgICAgICRzY29wZS5Kb2JSb2xlID0gcmVzcG9uc2UuZGF0YS5qb2JSb2xlOwogICAgICAgICAgICAkc2NvcGUuRWFybmluZ3MgPSByZXNwb25zZS5kYXRhLmVhcm5pbmdzOwogICAgICAgICAgICAkc2NvcGUuU2FsYXJ5ID0gcmVzcG9uc2UuZGF0YS5zYWxhcnk7CiAgICAgICAgICAgICRzY29wZS5DdXJyZW5jeSA9IHJlc3BvbnNlLmRhdGEuY3VycmVuY3k7CiAgICAgICAgICAgICRzY29wZS5BbW91bnQgPSAkc2NvcGUuUGF5cm9sbEVudHJ5LkFtb3VudDsKICAgICAgICAgICAgJHNjb3BlLkRlZHVjdGlvbnMgPSByZXNwb25zZS5kYXRhLmRlZHVjdGlvbnM7CiAgICAgICAgICAgICRzY29wZS5FYXJuaW5nc1RvdGFsID0gcmVzcG9uc2UuZGF0YS5lYXJuaW5nc1RvdGFsOwogICAgICAgICAgICAkc2NvcGUuRGVkdWN0aW9uc1RvdGFsID0gcmVzcG9uc2UuZGF0YS5kZWR1Y3Rpb25zVG90YWw7CiAgICAgICAgfSk7Cn1dKTsKICAgICAgICA8L3NjcmlwdD4KICAgIDwvaGVhZD4KCiAgICA8Ym9keT4KICAgICAgICA8ZGl2IGNsYXNzPSJkYXRlLWJveCI+CiAgICAgICAgICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPgogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJ0b3AiPgogICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSIyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRhYmxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly93d3cuY29kYmV4LmNvbS9mYXZpY29uLnBuZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwJTsgbWF4LXdpZHRoOiA1MHB4IiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGF0ZTogPGI+e3tEYXRlIHwgZGF0ZTogJ3l5eXktTU0tZGQnfX08L2I+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGFibGU+CgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0icGF5c2xpcC1qdW1ibyI+UGF5c2xpcDwvZGl2PgoKCiAgICAgICAgICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiPgogICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJpbmZvcm1hdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNvbHNwYW49IjIiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbXBsb3llZTogPGI+e3tFbXBsb3llZS5OYW1lfX08L2I+PGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBlcnNvbmFsIG51bWJlcjogPGI+e3tFbXBsb3llZS5QZXJzb25hbE51bWJlcn19PC9iPjxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZXBhcnRtZW50OiA8Yj57e0RlcGFydG1lbnQuTmFtZX19PC9iPjxiciAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKb2Igcm9sZTogPGI+e3tKb2JSb2xlLk5hbWV9fTwvYj4gPGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBheSBwZXJpb2Q6IDxiPnt7UGF5cm9sbEVudHJ5LlN0YXJ0RGF0ZSB8IGRhdGU6ICd5eXl5L01NL2RkJ319IC0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7UGF5cm9sbEVudHJ5LkVuZERhdGUgfCBkYXRlOiAneXl5eS9NTS9kZCd9fTwvYj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KCiAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICA8YnIgLz4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVhcm5pbmdzLWRlZHVjdGlvbnMiPgogICAgICAgICAgICAgICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+CiAgICAgICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJoZWFkaW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkVhcm5pbmdzPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPkFtb3VudDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5CYXNlIFNhbGFyeTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57e1NhbGFyeS5Hcm9zc319PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoKICAgICAgICAgICAgICAgICAgICA8dHIgbmctcmVwZWF0PSJlYXJuaW5nIGluIEVhcm5pbmdzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGVhcm5pbmcuTmFtZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD57eyBlYXJuaW5nLkFtb3VudCB9fSB7eyBDdXJyZW5jeS5Db2RlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgoKICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PGI+VG90YWw6PC9iPiB7e0Vhcm5pbmdzVG90YWx9fSB7eyBDdXJyZW5jeS5Db2RlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KCiAgICAgICAgICAgICAgICA8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4KICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImhlYWRpbmciPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+RGVkdWN0aW9uczwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5BbW91bnQ8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CgogICAgICAgICAgICAgICAgICAgIDx0ciBuZy1yZXBlYXQ9ImRlZHVjdGlvbiBpbiBEZWR1Y3Rpb25zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRlZHVjdGlvbi5OYW1lIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPnt7IGRlZHVjdGlvbi5BbW91bnQgfX0ge3sgQ3VycmVuY3kuQ29kZSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KCiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxiPlRvdGFsOjwvYj4ge3tEZWR1Y3Rpb25zVG90YWx9fSB7eyBDdXJyZW5jeS5Db2RlIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8aHIgLz4KICAgICAgICAgICAgPGJyIC8+CgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGI+TmV0IHBheTo8L2I+IHt7RWFybmluZ3NUb3RhbCAtIERlZHVjdGlvbnNUb3RhbH19IHt7Q3VycmVuY3kuQ29kZX19CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KCjwvaHRtbD4KCg=="
"DOCUMENTTEMPLATE_ID","DOCUMENTTEMPLATE_TYPE","DOCUMENTTEMPLATE_CONTENT"
"1","5","<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" ng-app="templateApp" ng-controller="templateController">

    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="icon" sizes="any" href="data:;base64,iVBORw0KGgo=">
        <title dg-view-title></title>
        <script type="text/javascript" src="sales-invoice-print.js"></script>
        <script type="text/javascript" src="/services/js/resources-core/services/loader.js?id=ide-view-js"></script>
        <link type="text/css" rel="stylesheet" href="/services/js/resources-core/services/loader.js?id=ide-view-css" />
        <theme></theme>
        <style>
.right-row {
    text-align: right;
}
            .invoice-box {
                max-width: 800px;
                margin: auto;
                padding: 30px;
                border: 1px solid #eee;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
                font-size: 16px;
                line-height: 24px;
                font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
                color: #555;
            }

            .invoice-box table {
                width: 100%;
                line-height: inherit;
                text-align: left;
            }

            .invoice-box table td {
                padding: 5px;
                vertical-align: top;
            }

            .invoice-box table tr td:nth-child(2) {
                text-align: right;
            }

            .invoice-box table tr td:nth-child(3) {
                text-align: right;
            }

            .invoice-box table tr td:nth-child(4) {
                text-align: right;
            }

            .invoice-box table tr.top table td {
                padding-bottom: 20px;
            }

            .invoice-box table tr.top table td.title {
                font-size: 45px;
                line-height: 45px;
                color: #333;
            }

            .invoice-box table tr.information table td {
                padding-bottom: 40px;
            }

            .invoice-box table tr.heading td {
                background: #eee;
                border-bottom: 1px solid #ddd;
                font-weight: bold;
            }

            .invoice-box table tr.details td {
                padding-bottom: 20px;
            }

            .invoice-box table tr.item td {
                border-bottom: 1px solid #eee;
            }

            .invoice-box table tr.item.last td {
                border-bottom: none;
            }

            .invoice-box table tr.total td:nth-child(6) {
                border-top: 2px solid #eee;
                font-weight: bold;
            }

            .invoice-jumbo {
                text-align: center;
                font-size: 3em;
                font-weight: bold;
                color: gray;
            }

            .invoice-footer {
                text-align: center;
                font-weight: bold;
            }

            @media only screen and (max-width: 600px) {
                .invoice-box table tr.top table td {
                    width: 100%;
                    display: block;
                    text-align: center;
                }

                .invoice-box table tr.information table td {
                    width: 100%;
                    display: block;
                    text-align: center;
                }
            }

            /** RTL **/
            .invoice-box.rtl {
                direction: rtl;
                font-family: Tahoma, 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
            }

            .invoice-box.rtl table {
                text-align: right;
            }

            .invoice-box.rtl table tr td:nth-child(2) {
                text-align: left;
            }

            .invoice-box.rtl table tr td:nth-child(3) {
                text-align: left;
            }

            .invoice-box.rtl table tr td:nth-child(6) {
                text-align: left;
            }

        </style>

        <script>
            const app = angular.module('templateApp', ['ideUI', 'ideView']);
            app.controller('templateController', ['$scope', '$http', 'ViewParameters', function ($scope, $http, ViewParameters) {
                const params = ViewParameters.get();
                const printSalesInvoiceUrl = "/services/ts/codbex-invoices/print/SalesInvoice/api/SalesInvoiceService.ts/" + params.id;

                $http.get(printSalesInvoiceUrl)
                    .then(function (response) {
                            $scope.Invoice = response.data.salesInvoice;
                            $scope.InvoiceItems = response.data.salesInvoiceItems;
                            $scope.Customer = response.data.customer;
                            $scope.Company = response.data.company;
                   });
            }]);

        </script>
    </head>

    <body>
        <div class="invoice-box">
            <table cellpadding="0" cellspacing="0">
                <tr class="top">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td class="title">
                                </td>

                                <td>
<div class="right-row”>
                                    Invoice #: <b>{{Invoice.Number}}</b><br />
                                    Invoice Date: <b>{{Invoice.Date | date: 'yyyy-MM-dd'}}</b><br />
                                    Due Date: <b>{{Invoice.Due | date: 'yyyy-MM-dd'}}</b>
</div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <div class="invoice-jumbo">Sales Invoice</div>

            <table cellpadding="0" cellspacing="0">
                <tr class="information">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>
                                    <b>{{Company.Name}}</b><br />
                                    {{Company.Address}}<br />
                                    {{Company.PostCode}}, {{Company.City}}, {{Company.Country}}
                                </td>

                                <td>
                                    <b>{{Customer.Name}}</b><br />
                                    {{Customer.Contact}}<br />
                                    {{Customer.Email}}<br />
                                    VAT #: <b>{{Customer.TIN}}</b>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <table cellpadding="0" cellspacing="0">
                <tr class="heading">
                    <td>Payment Method</td>
                    <td>Sent Via</td>
                    <td>Conditions</td>
                </tr>

                <tr class="details">
                    <td>{{Invoice.PaymentMethod}}</td>
                    <td>{{Invoice.SentMethod}}</td>
                    <td>{{Invoice.Conditions}}</td>
                </tr>
            </table>
            <table cellpadding="0" cellspacing="0">
                <tr class="heading">
                    <td>Item</td>
                    <td>Quantity</td>
                    <td>Price</td>
                    <td>Net</td>
                    <td>VAT</td>
                    <td>Gross</td>
                </tr>

                <tr class="item" ng-repeat="next in InvoiceItems">
                    <td>{{next.Name}}</td>
                    <td>{{next.Quantity| number}}</td>
                    <td>{{next.Price| number}}</td>
                    <td>{{next.Net| number}}</td>
                    <td>{{next.VATRate| number}}</td>
                    <td>{{next.VAT| number}}</td>
                    <td>{{next.Gross| number}}</td>

                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Net: {{Invoice.Net| number}}</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Gross: {{Invoice.Gross| number}}</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Discount: {{Invoice.Discount| number}}</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Taxes: {{Invoice.Taxes| number}}</td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>VAT: {{Invoice.VAT| number}}</td>
                </tr>
                <tr class="total">
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>Total: {{Invoice.Total| number}}</td>
                </tr>
            </table>

            <hr />
            <br />

            <table cellpadding="0" cellspacing="0">
                <tr class="information">
                    <td colspan="2">
                        <table>
                            <tr>
                                <td>
                                    TIN #: <b>{{Company.TIN}}</b><br />
                                    e-mail: {{Company.Email}}<br />
                                    Phone: {{Company.Phone}}
                                </td>

                                <td>
                                    IBAN: <b>{{Company.IBAN}}</b><br />
                                    SWIFT: {{Company.SWIFT}}<br />
                                    Bank: {{Company.Bank}}
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>

            <div class="invoice-footer">THANK YOU FOR YOUR BUSINESS!</div>

        </div>
    </body>

</html>
"
